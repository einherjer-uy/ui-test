/*use tt- prefix to identify "twitter tickets" classes, as opposed to bootstrap classes*/

.tt-navbar {
	margin-bottom: 0; /*override bootstrap navbar, which otherwise would generate a space between the navbar and the content below*/
}

.tt-icon { /*we only use a few sections of this sprite, this is just to test the sprite technique*/
	background-image: url("../img/twitter_web_sprite_icons.png");
	display: inline-block;
}

.tt-bird { /*selects the bird image from the sprite, see tt-icon*/
	background-position: -80px 0;
	width: 24px;
	height: 21px;
	background-repeat: no-repeat;
}

#login-background {
	position: fixed; /*TODO*/
	background: none repeat scroll 0 0 #000000; /*TODO*/
	height: 200%; /*TODO*/
	width: 200%; /*TODO*/
	left: -50%; /*TODO*/
}

#login-background img { /*using ids in the html and contextual selector to select elements inside the element with id reduced the clutter of "class" attributes in the html*/
	display: block; /*TODO*/
	bottom: 0; /*TODO*/
	left: 0; /*TODO*/
	right: 0; /*TODO*/
	top: 0; /*TODO*/
	margin: auto; /*TODO*/
	min-height: 50%; /*TODO*/
	min-width: 50%; /*TODO*/
	border: 0 none; /*TODO*/
}

#login-wrapper {
	position: absolute; /*positioned wrapper allows position:absolute in child elements to relate to this container and not the body*/
	min-height: 500px; /*min and max-height to be sure elements are not too "vertically" close/apart in different screen sizes (in this case applies to div welcome vs div footer)*/
	max-height: 800px;
	top: 0; 
	bottom: 0; /*stretch to the borders otherwise since the content is too short the height ends up in 500px and the footer is displayed in the middle of the screen*/
	left: 0;
	right: 0;
}

#login-welcome {
	position: absolute;
	width: 800px; /*set the dimensions of the div, see margin*/
	height: 180px; /*idem width*/
	top: 40%; /*find the position in the screen where the div will be centered*/
	left: 50%; /*idem top*/
	margin: -90px 0 0 -400px; /*setting top/left affects the upper-left corner of the div, now we substract half the height and half the width to the margins so we move the center of the div to that position*/	
}

#login-text {
	float: left;
	margin: 15px 95px 0 0;
	width: 345px;
	padding: 10px 30px 20px;
	background-color: rgba(0, 0, 0, 0.15); /*yes, this is not in line with how twitter.com looks but I wanted to try the effect*/
	text-shadow: #000 0 1px 2px; /*TODO*/
}
/* another way to get the same positioning but with position:absolute
	use top:50% to start at the middle and then negative top margin at height/2 to center, instead of a fixed positive top margin (in this case having a fixed top margin is not a problem cause the container is properly centered using the "top:50%"" technique)
	use  left:0 instead of float to allow 2 divs in the same line
	this one has the disadvantage that on a smaller screen when the div on the left is hidden the div on the right doesn't move to the left
	see #login-text-OPTION_2 below*/
#login-text-OPTION_2 {
	position: absolute;
	left: 0;
	top: 50%;
	height: 110px;
	margin-top: -55px;
	padding: 10px 30px 20px;
	background-color: rgba(0, 0, 0, 0.15); /*yes, this is not in line with how twitter.com looks but I wanted to try the effect*/
	text-shadow: #000 0 1px 2px; /*TODO*/
}

#login-text h2 {
	color: #fff;
	font-size: 20px;
	font-weight: 700;
	margin-bottom: 3px;
}

#login-text h3 {
	color: #eee;
	font-size: 20px;
	font-weight: 300;
	margin-top: 5px;
}

#login-form {
	float: left;
	width: 350px;
    margin-bottom: 0px; /*override bootstrap panel*/
    background: rgba(241, 241, 241, 0.80); /*#f1f1f1*/ /*TODO*/
    border: 1px solid #e5e5e5; /*TODO*/
    padding: 10px 10px 0px; /*compensate the bottom margin added by bootstrap form-group*/
}
/* another way to get the same positioning but with position:absolute
	use top:50% to start at the middle and then negative top margin at height/2 to center, instead of a fixed positive top margin (in this case having a fixed top margin is not a problem cause the container is properly centered using the "top:50%"" technique)
	use  right:0 instead of float to allow 2 divs in the same line
	this one has the disadvantage that on a smaller screen when the div on the left is hidden the div on the right doesn't move to the left
	see #login-form-OPTION_2 below*/
#login-form-OPTION_2 {
    position: absolute;
    right: 0;
    top: 50%;
    margin-top: -70px;
    width: 350px;
    margin-bottom: 0px; /*override bootstrap panel*/
    background: rgba(241, 241, 241, 0.80); /*#f1f1f1*/ /*TODO*/
    border: 1px solid #e5e5e5; /*TODO*/
    padding: 10px 10px 0px; /*compensate the bottom margin added by bootstrap form-group*/
}

#login-form .form-group {
	margin-bottom: 10px; /*override botstrap form-group*/
}

#login-footer {
	position: absolute;
	bottom: 30px;
	text-align: center;
	width: 100%;
	color: rgba(255, 255, 255, 0.25);
	font-size: 11px;
}

/*mobile and tablet*/
@media (max-width: 991px) {
	#login-form { /*reduce the width of the form so that the user/password inputs remain at the same size, now that the labels show up above the input and not in the same line*/
		width: 261px;
	}

	.tt-col-sm-offset-9 { /*Bootstrap 3 RC1 bug, only col-offset defined, no col-sm-offset or col-lg-offset. Needed yo align the "log in" button to the right*/
		margin-left: 75%;
	}
}

/*tablet*/
@media (max-width: 991px) and (min-width: 768px) {
	.form-horizontal .control-label { /*make "username" and "password" labels aligned to the left and reduce padding between form elements*/
		text-align: left;
		padding-top: 0;
	}

	#login-text { /*reduce distance between divs login-text and login-form*/
		margin-right: 50px;
	}

	#login-welcome { /*adjust centering so that even on the smaller screen the left side is not cut out*/
		width: 700px;
		margin-left: -350px;
	}
}

/*mobile*/
@media (max-width: 767px) {
	#login-welcome { /*do no center the contents cause on a very small screen the left side can be cut, instead align to the left with some left and top margin*/
		position: relative;
		left: 10%;
		margin:	30px 0 0 0;
	}
}